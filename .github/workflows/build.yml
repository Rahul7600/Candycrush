name: Build and Analyze with Coverage

on:
  push:
    branches:
      - main

jobs:
  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Build
        # Add your build commands here
        run: |
          # Example build commands:
          # npm install
          # npm run build

      # Run tests and collect code coverage
      - name: Run tests and collect coverage
        # Replace with appropriate command to run your tests and collect coverage
        run: |
          # Example commands using Jest for JavaScript projects:
          # npm install
          # npm test -- --coverage

      - name: Upload coverage report to SonarQube
        uses: sonarsource/sonar-scanner-cli@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          # You may need additional environment variables depending on your SonarQube setup
        with:
          args: >
            -Dsonar.coverageReportPaths=<path_to_coverage_report>

      - name: Analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - name: Check Quality Gate
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


